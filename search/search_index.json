{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"sorceress 1.7 Purpose of package This package's purpose is to create optical illusions in a simple way. The package is written in Python. however, the repo also includes JavaScript. In explanations section, you can find the explanations of the illusions. If you find visual illusions fascinating this package is for you. You can reproduce the illusions in the literature with a few lines of code. More importantly, we shouldn't take optical illusions as just fun. Optical illusions help us to research how the visual system of the brain ,which is the most complex mechanism, processes such cues. Most of the optical illusions in this package are seriously researched in the neuroscience literature. And I must say that the \"causation\" of the most of effects is still debated in the literature according to my humble knowledge. Optical illusions are researching not only in human vision but in other animals. So we can get a lot of insights from an evolutionary perspective. In summary, I think this topic is very important, especially in vision studies. Getting started\ud83d\ude80\ufe0f Package can be found on pypi hence you can install it with using pip. pip install sorceress #importing import sorceress #another way to import from sorceress import sorceress Features Illusions in Python chromatic dotill realtimegrid addlines eyecolour dakinPex bruno dolboeuf kanizsa tAki2001 cafewall ccob ebbinghaus whiteill enigma blackhole colorgrids Illusions in JavaScript footsteps thelilac EyeMovements spatialmotion Motion Induced Blindness Depth Examples For each function, I added example of how to use it. You can find them in the documentation. I will show just few examples. from sorcerer import sorcerer sorcerer.chromatic(\"myimage.jpg\",\"outputname\" ,circle=False, method=\"CMCCAT2000\", gif=True, Gifduration=7) sorcerer.addlines(\"myimage.png\",\"desiredoutputname\",linecolour1=(0,255,0),linecolour2=(0,255,255),linecolour3 (255,0,0)) Contribution Any contribution, bug report, suggestion is always welcome. Author Main Maintainer: Enes Altun","title":"Home"},{"location":"#sorceress-17","text":"","title":"sorceress 1.7"},{"location":"#purpose-of-package","text":"This package's purpose is to create optical illusions in a simple way. The package is written in Python. however, the repo also includes JavaScript. In explanations section, you can find the explanations of the illusions. If you find visual illusions fascinating this package is for you. You can reproduce the illusions in the literature with a few lines of code. More importantly, we shouldn't take optical illusions as just fun. Optical illusions help us to research how the visual system of the brain ,which is the most complex mechanism, processes such cues. Most of the optical illusions in this package are seriously researched in the neuroscience literature. And I must say that the \"causation\" of the most of effects is still debated in the literature according to my humble knowledge. Optical illusions are researching not only in human vision but in other animals. So we can get a lot of insights from an evolutionary perspective. In summary, I think this topic is very important, especially in vision studies.","title":"Purpose of package"},{"location":"#getting-started","text":"Package can be found on pypi hence you can install it with using pip. pip install sorceress #importing import sorceress #another way to import from sorceress import sorceress","title":"Getting started\ud83d\ude80\ufe0f"},{"location":"#features","text":"Illusions in Python chromatic dotill realtimegrid addlines eyecolour dakinPex bruno dolboeuf kanizsa tAki2001 cafewall ccob ebbinghaus whiteill enigma blackhole colorgrids Illusions in JavaScript footsteps thelilac EyeMovements spatialmotion Motion Induced Blindness Depth","title":"Features"},{"location":"#examples","text":"For each function, I added example of how to use it. You can find them in the documentation. I will show just few examples. from sorcerer import sorcerer sorcerer.chromatic(\"myimage.jpg\",\"outputname\" ,circle=False, method=\"CMCCAT2000\", gif=True, Gifduration=7) sorcerer.addlines(\"myimage.png\",\"desiredoutputname\",linecolour1=(0,255,0),linecolour2=(0,255,255),linecolour3 (255,0,0))","title":"Examples"},{"location":"#contribution","text":"Any contribution, bug report, suggestion is always welcome.","title":"Contribution"},{"location":"#author","text":"Main Maintainer: Enes Altun","title":"Author"},{"location":"api_reference/","text":"API Reference This page gives an overview of all sorceress functions and methods. + chromatic + dotill + realtimegrid + dolboeuf + kanizsa + dakinPex + bruno + ccob + ponzol + eyecolour + tAki2001 + addlines + cafeWall + ebbinghaus + whiteill + enigma + blackhole + colorgrids chromatic This function process image to generate optical illusion about chromatic adaptation. After a fixation of the center, gray scale image will perceived as a colorful. Fast spatial tuning in chromatic adaptation is possible as a possible sensory mechanism for linking color constancy to the spatial structure of a scene. \"\"\" This function is used to convert an image to chromatic image. :param img: input image :param circle: a center fixation :param method: \"CMCCAT2000\" or \"Von Kries\" :param gif: export as gif :param Gifduration: duration of the gif :return: \"\"\" dotill An optical illusion mainly affected by lateral inhibition. \"\"\" This function is used to create a dotill image. :param dimension: width and height of the image :param hlinefreq: horizontal line frequency :param wlinefreq: vertical line frequency :param dotcolor: color of the dot :param dotradius: radius of the dot :param horizontalcolor: horizontal line color :param verticalcolor: vertical line color :param horizontalthickness: horizontal line thickness :param verticalthickness: vertical line thickness :param verticallines: if True, vertical lines are drawn :param horizontallines: if True, horizontal lines are drawn :return: \"\"\" realtimegrid perceive black and white real time (with webcam) frames as colorful. \"\"\" realtimegrid is a function that add grids to the gray frame. :param realcolours: if True, real colours (colors that correspond to the frame) are added to frame. :return: \"\"\" dakinPex An optical illusion about lightness perception. \"\"\" Creates an optical illusion from the Dakin and Bex, 2003 paper. :param outputname: output name :param dimension: dimension of the image :return: \"\"\" dolboeuf An optical illusion created by Belgian psychologist Joseph Remi Leopold Delb\u0153uf in 1865 \"\"\" Creates an optical illusion from the Joseph Remi Leopold Delb\u0153uf (1865). :param outputname: output name :param circleColor: color of the circle :param kill: if true, the illusion will be destroyed by the lines :return: \"\"\" kanizsa A famous optical illusion created by Gaetano Kanizsa. \"\"\" Creates an optical illusion from the Gaetano Kanizsa. :param outputname: output name :param dims: dimension of the image :param circleColor: color of the circle :param bgcolor: color of the background :return: \"\"\" bruno An optical illusion created by Bruno et al. (1997) that used in an interesting experiment. \"\"\" Creates an optical illusion from the Bruno et al. (1997). :param outputname: output name :param circle: if true, a circle is drawn instead of a rectangle :param polycolor: color of the polygon :param rectcolor: color of the rectangle :param circColor: color of the circle :return: \"\"\" ccob An optical illusion about the spatial frequency. ccob stands for \"Craik\u2013Cornsweet\u2013O'Brien\" and is commonly called as CCOB effect. \"\"\" Creates an optical illusion about Spatial Frequency. :param image: input image :param rms: desired root mean square :param amplitudespectrum: amplitude spectrum :param plttitle: output name :return: \"\"\" ponzol An old school optical illlusion described by the Ponzo, 1912. \"\"\" Creates an optical illusion from Ponzo, 1912. :param outputname: output name :param kill: if true, the illusion will be destroyed by the lines :param line1: color of the first line :param line2: color of the second line :param rectangle1: color of the first rectangle :param rectangle2: color of the second rectangle :return: \"\"\" eyecolour When you run this function, you need to select a region of the image with your mouse.Illusion is about the perceving gray eyecolor as a colorful. So for best result, i reccomend you to use a clear profile picture. \"\"\" Select the iris on the image with mouse click and returns the illusory eye colour. Arguments: :param img: input image path with extension :param alpha: alpha beta and M are the parameters of blending. Play with them to get the best results :param luminance and saturation: Don't use values greater than 1 for luminance and saturation :param colors: BGR values of the color you want to use for the left half of the image (default is red) :return: \"\"\" tAki2001 \u201cColoured ray illusion \u201d by Akiyoshi Kitaoka (Kitaoka, 2001). \"\"\" \u201cColoured ray illusion \u201d by Akiyoshi Kitaoka (2001). :param outputname: output name :param dimension: dimension of the image :param circlecolour: color of the circle :param circleradius: radius of the circle :param bglinecolor: color of the background line :param bgcolor: color of the background :return: \"\"\" addlines Function add lines to the image to create an illusion to see actual photo. I dont sure can we classify this as an optical illusion but I inspired from the Akiyoshi Kitaoka.eyecolour If you select alphablending==True line colors are much more stable against the luminance change in the background image. It's because in opencv, when you overlay two images or colors the function called addWeighted mixes the colors in very \"small tones\" but you probably do not even notice. Still, this function which I called alpha blending, is much more stable to luminance change. Use both, in the same way and see what is differs. \"\"\" Adds lines to an image. Arguments: img: input image linecolour1: first line colour linecolour2: second line colour linecolour3: third line colour alphablending: if True, line colors are much more stable against the luminance change in the background image. :return: \"\"\" cafeWall This function creates a geometrical-optical illusion called \"cafewall\" \"\"\" Creates cafe wall illusion. :param outputname: output name :param dimension: dimension of the image :param resize: if true, the image will be adjusted to the dimension :param brickcolor: color of the bricks :param bgcolor: color of the background :return: \"\"\" ebbinghaus An optical illusion that generated by german psychologist Hermann Ebbinghaus. \"\"\" Creates ebbinghaus illision . :param output: output name :param bgcolor: background color :param lcradius: left center circle radius :param rcradius: right center circle radius :param lcradius2: left circles radius :param rcradius2: right circles radius :param randcirclecolors: circles have random colors (recommended) :return: \"\"\" whiteill An illusion that has been described by White also about the irradiation effect. \"\"\" Optiacal illusion that has been described by White (1979). :param dimension: dimension of the image :param version2: if True, the second version of the illusion is created :param rect1: color of the first rectangle :param rect2: color of the second rectangle :param bgrec1: background color of the first rectangle :param bgrec2: background color of the second rectangle :param bg1: background color of the first image :param bg2: background color of the second image :param outputname: output name \"\"\" enigma An optical illusion based on the a paper from the Zeki et al (1993) about the motion. \"\"\" based on the a paper from the Zeki et al (1993). :param linecolors: color of the lines :param bgcolor: background color of the image :param circle1: outer circle color :param circle2: inner circle color :param centercircle: central circle color :param outputname: output name :return: \"\"\" blackhole A recent optical illusion that described by the Laeng et al (2022). \"\"\"\" Illusorily Expanding Holes. height: height of the image width: width of the image circle_size: size of the circles (center ellipse is adjusted with this ratio) circle_color: color of the circles kill: if True, circles are not drawn \"\"\" colorgrids This \"illusion\" was created by artist \u00d8yvind Kol\u00e5s from GIMP. \"\"\" Color Assimilation Grid Illusion img: input image style: style of mask, \"vertical\",\"horizontal\",\"gaussian\",\"grids\" vertical is the default style and adds vertical lines to the image horizontal; adds horizontal lines to the image gaussian; add gaussian distributed circles to the image grids; adds both vertical and horizontal lines to the image width: width of lines frequency: frequency of lines saturation: saturation of lines, don't use too high values (1 to 20 is recommended) \"\"\"","title":"API"},{"location":"api_reference/#api-reference","text":"This page gives an overview of all sorceress functions and methods. + chromatic + dotill + realtimegrid + dolboeuf + kanizsa + dakinPex + bruno + ccob + ponzol + eyecolour + tAki2001 + addlines + cafeWall + ebbinghaus + whiteill + enigma + blackhole + colorgrids chromatic This function process image to generate optical illusion about chromatic adaptation. After a fixation of the center, gray scale image will perceived as a colorful. Fast spatial tuning in chromatic adaptation is possible as a possible sensory mechanism for linking color constancy to the spatial structure of a scene. \"\"\" This function is used to convert an image to chromatic image. :param img: input image :param circle: a center fixation :param method: \"CMCCAT2000\" or \"Von Kries\" :param gif: export as gif :param Gifduration: duration of the gif :return: \"\"\" dotill An optical illusion mainly affected by lateral inhibition. \"\"\" This function is used to create a dotill image. :param dimension: width and height of the image :param hlinefreq: horizontal line frequency :param wlinefreq: vertical line frequency :param dotcolor: color of the dot :param dotradius: radius of the dot :param horizontalcolor: horizontal line color :param verticalcolor: vertical line color :param horizontalthickness: horizontal line thickness :param verticalthickness: vertical line thickness :param verticallines: if True, vertical lines are drawn :param horizontallines: if True, horizontal lines are drawn :return: \"\"\" realtimegrid perceive black and white real time (with webcam) frames as colorful. \"\"\" realtimegrid is a function that add grids to the gray frame. :param realcolours: if True, real colours (colors that correspond to the frame) are added to frame. :return: \"\"\" dakinPex An optical illusion about lightness perception. \"\"\" Creates an optical illusion from the Dakin and Bex, 2003 paper. :param outputname: output name :param dimension: dimension of the image :return: \"\"\" dolboeuf An optical illusion created by Belgian psychologist Joseph Remi Leopold Delb\u0153uf in 1865 \"\"\" Creates an optical illusion from the Joseph Remi Leopold Delb\u0153uf (1865). :param outputname: output name :param circleColor: color of the circle :param kill: if true, the illusion will be destroyed by the lines :return: \"\"\" kanizsa A famous optical illusion created by Gaetano Kanizsa. \"\"\" Creates an optical illusion from the Gaetano Kanizsa. :param outputname: output name :param dims: dimension of the image :param circleColor: color of the circle :param bgcolor: color of the background :return: \"\"\" bruno An optical illusion created by Bruno et al. (1997) that used in an interesting experiment. \"\"\" Creates an optical illusion from the Bruno et al. (1997). :param outputname: output name :param circle: if true, a circle is drawn instead of a rectangle :param polycolor: color of the polygon :param rectcolor: color of the rectangle :param circColor: color of the circle :return: \"\"\" ccob An optical illusion about the spatial frequency. ccob stands for \"Craik\u2013Cornsweet\u2013O'Brien\" and is commonly called as CCOB effect. \"\"\" Creates an optical illusion about Spatial Frequency. :param image: input image :param rms: desired root mean square :param amplitudespectrum: amplitude spectrum :param plttitle: output name :return: \"\"\" ponzol An old school optical illlusion described by the Ponzo, 1912. \"\"\" Creates an optical illusion from Ponzo, 1912. :param outputname: output name :param kill: if true, the illusion will be destroyed by the lines :param line1: color of the first line :param line2: color of the second line :param rectangle1: color of the first rectangle :param rectangle2: color of the second rectangle :return: \"\"\" eyecolour When you run this function, you need to select a region of the image with your mouse.Illusion is about the perceving gray eyecolor as a colorful. So for best result, i reccomend you to use a clear profile picture. \"\"\" Select the iris on the image with mouse click and returns the illusory eye colour. Arguments: :param img: input image path with extension :param alpha: alpha beta and M are the parameters of blending. Play with them to get the best results :param luminance and saturation: Don't use values greater than 1 for luminance and saturation :param colors: BGR values of the color you want to use for the left half of the image (default is red) :return: \"\"\" tAki2001 \u201cColoured ray illusion \u201d by Akiyoshi Kitaoka (Kitaoka, 2001). \"\"\" \u201cColoured ray illusion \u201d by Akiyoshi Kitaoka (2001). :param outputname: output name :param dimension: dimension of the image :param circlecolour: color of the circle :param circleradius: radius of the circle :param bglinecolor: color of the background line :param bgcolor: color of the background :return: \"\"\" addlines Function add lines to the image to create an illusion to see actual photo. I dont sure can we classify this as an optical illusion but I inspired from the Akiyoshi Kitaoka.eyecolour If you select alphablending==True line colors are much more stable against the luminance change in the background image. It's because in opencv, when you overlay two images or colors the function called addWeighted mixes the colors in very \"small tones\" but you probably do not even notice. Still, this function which I called alpha blending, is much more stable to luminance change. Use both, in the same way and see what is differs. \"\"\" Adds lines to an image. Arguments: img: input image linecolour1: first line colour linecolour2: second line colour linecolour3: third line colour alphablending: if True, line colors are much more stable against the luminance change in the background image. :return: \"\"\" cafeWall This function creates a geometrical-optical illusion called \"cafewall\" \"\"\" Creates cafe wall illusion. :param outputname: output name :param dimension: dimension of the image :param resize: if true, the image will be adjusted to the dimension :param brickcolor: color of the bricks :param bgcolor: color of the background :return: \"\"\" ebbinghaus An optical illusion that generated by german psychologist Hermann Ebbinghaus. \"\"\" Creates ebbinghaus illision . :param output: output name :param bgcolor: background color :param lcradius: left center circle radius :param rcradius: right center circle radius :param lcradius2: left circles radius :param rcradius2: right circles radius :param randcirclecolors: circles have random colors (recommended) :return: \"\"\" whiteill An illusion that has been described by White also about the irradiation effect. \"\"\" Optiacal illusion that has been described by White (1979). :param dimension: dimension of the image :param version2: if True, the second version of the illusion is created :param rect1: color of the first rectangle :param rect2: color of the second rectangle :param bgrec1: background color of the first rectangle :param bgrec2: background color of the second rectangle :param bg1: background color of the first image :param bg2: background color of the second image :param outputname: output name \"\"\" enigma An optical illusion based on the a paper from the Zeki et al (1993) about the motion. \"\"\" based on the a paper from the Zeki et al (1993). :param linecolors: color of the lines :param bgcolor: background color of the image :param circle1: outer circle color :param circle2: inner circle color :param centercircle: central circle color :param outputname: output name :return: \"\"\" blackhole A recent optical illusion that described by the Laeng et al (2022). \"\"\"\" Illusorily Expanding Holes. height: height of the image width: width of the image circle_size: size of the circles (center ellipse is adjusted with this ratio) circle_color: color of the circles kill: if True, circles are not drawn \"\"\" colorgrids This \"illusion\" was created by artist \u00d8yvind Kol\u00e5s from GIMP. \"\"\" Color Assimilation Grid Illusion img: input image style: style of mask, \"vertical\",\"horizontal\",\"gaussian\",\"grids\" vertical is the default style and adds vertical lines to the image horizontal; adds horizontal lines to the image gaussian; add gaussian distributed circles to the image grids; adds both vertical and horizontal lines to the image width: width of lines frequency: frequency of lines saturation: saturation of lines, don't use too high values (1 to 20 is recommended) \"\"\"","title":"API Reference"},{"location":"contribution/","text":"Any contributions are welcome. Contributing is easy, just fork the repository, make your changes and submit a pull request. If you have any questions, feel free to open an issue. You can just suggest new illusions we can code together.\u2764\ufe0f mail: enesaltun2@gmail.com","title":"Contribution"},{"location":"explanations%20of%20illusions/","text":"This page is trying to explain all optical illusions First, let's import the package. I usually import the package like this: from sorceress import sorceress Remember you need to also install other packages, otherwise you will get an error. One of the packages is numpy , which is used to create arrays. You can install it by typing pip install numpy in your terminal. Another package is matplotlib , which is used to plot the images. You can install it by typing pip install matplotlib in your terminal. If you are using conda , you can install them by typing conda install numpy and conda install matplotlib in your terminal. If you are using pipenv , you can install them by typing pipenv install numpy and pipenv install matplotlib in your terminal. Another package is cv2, which is used to read images and image processing. You can install it by typing pip install opencv-python in your terminal. I also use imageio and PIL packages for more basic image processing. You can install them by typing pip install imageio and pip install pillow in your terminal. Last one is the color-science package, which is used to convert colors. You can install it by typing pip install color-science in your terminal. You don't need to import the other packages, because they are imported in the sorceress package. 1- chromatic Chromatic adaptation is probably one of the central concepts in color vision. Chromatic adaptation is decreased sensitivity to a particular color as a result of prolonged exposure to a colored stimulus. The chromatic adaptation transforms were mainly studied with von Kries, Bradford, Sharp, and CMCCAT2000. However, CMCCAT2000 performed best. You can apply this function to any image and function automatically processes the image and returns a gif file. The gif file shows the transformation of the image from the original to the adapted image. The von Kries chromatic adaptation method is a technique that is sometimes used in camera image processing. The method is to apply a gain to each of the human cone cell spectral sensitivity responses so as to keep the adapted appearance of the reference white constant. Herbert E. Ives was the first to clearly apply Johannes von Kries' theory of adaptive gains on the three cone cell types to the issue of color constancy; as a result, the technique is sometimes known as the Ives transform or the von Kries-Ives adaptation (Gegenfurtner, 1999). sorceress.chromatic(\"inputfolder/tree.jpg\",Gifduration=10) simple example via a gif: focus on the red dot (10 second) image source 2- dotill Lateral inhibition is the phenomenon in which a neuron's response to a stimulus is inhibited by the excitation of a neighboring neuron (Bakshi and Ghosh, 2017).Neurons that are firing inhibit the stimulation of surrounding. Accordingly, only the neurons that are most stimulated and least inhibited respond (Cohen, 2011). Some neurons are activated more than others during lateral inhibition. Excitatory neurotransmitters are released to neurons along a specific path by a highly activated cell. In addition, the highly activated primary neuron in the brain activates interneurons that prevent the stimulation of cells that are located laterally. Interneurons are nerve cells that help the central nervous system and motor or sensory neurons communicate with one another. This action increases the contrast between different stimuli and sharpens the focus on a particular stimulus. Body sensory systems like the olfactory, visual, tactile, and auditory systems all experience lateral inhibition. Mach bands, the perception of light and dark lines next to abrupt brightness changes, and the gray dots that appear between junctions in the Hermann grid illusion can all be explained by lateral inhibition. It's an old-fashioned illusion that is probably known the most. I've added many parameters to this function to reproduce in distinctive ways. example usage: sorceress.dotill((500,500),hlinefreq=12,wlinefreq=12,dotcolor=(0,255,0),dotradius=5,horizontalcolor=(14, 75, 3),verticalcolor=(14, 75, 3),horizontalthickness=4,verticalthickness=4,verticallines=True,horizontallines=True): 3- sorceress.realtimegrid() sorceress.realtimegrid(realcolours=True) perceive black and white real time (with webcam) frames as colorful. It's a real time version of sorceress.colorgrids() function. with realcolours=False code will not calculate the real colors of your frame. I recommend you to use this function with real colors. Illusion is getting powerful if colors of lines separate each other, however, with realcolours=False means a lot of options are needed in the slide bar and it's not a pleasant view. It is an indicator of how flexible the color perception in the human visual system is. Inspiration : 4- addlines inspired from prof Akiyoshi Kitaoka. Have you seen this illusion before? In the below, someone is hiding after those grids. Beneath these grids there is more than Grids. Beneath these grids there is an idea. And ideas are bulletproof... What you see is results of vast amounts of neural computation, mixed with a bit of guesswork. If you look closely you use lower spatial frequencies and if you look at a further distance you will see the high spatial frequencies. In short, there are more grids that fall on the light-sensitive portion of the back of your eye the further the image is away from you.Low-contrast object perception is impaired by high spatial-frequency components. You can see the Vendetta guy if you scroll down and up the page or zoom out the whole image. Or more accurately, apply a Gaussian. sorceress.addlines(img,linecolour1=(0,255,0),linecolour2=(0,255,255),linecolour3=(255,0,0)) This function basically adds vertical lines to an image, but it's blending not overlaying! img your input image like \"morgo.jpg\" linecolour1 linecolour2 and linecolour3 are point the colors of lines. example usage: sorceress.addlines(\"vfor.jpg\",linecolour1=(150,5,5),linecolour2=(10,155,20),linecolour3=(0,15,15),alphablending==False) If you select alphablending==True line colors are much more stable against the luminance change in the background image. It's because in OpenCV when you overlay two images or colors the function called addWeighted mixes the colors in very \"small tones\" but you probably do not even notice. Still, this function which I called alpha blending, is much more stable to luminance change. Use both, in the same way, and see what differs. 5- eyecolour inspried from: sorceress.eyecolour(\"yourimage.jpg\") With this illusion, you perceive the black-and-white NumPy array as colorful. After you run this code, you need to select the iris manually and then push the enter. I didn't want to use the iris detector since it slowed down the script. Just select smaller as much as possible. I've used seamlessClone function from OpenCV for getting much more realistic results. Your ROI (region of interest that you selected manually) will correspond to an eclipse' coordinates which I needed to detect the exact position of the iris. Red, green, and blue are three overlapping color families that three separate types of photoreceptors in the eye are tuned to, which contributes to the process of seeing color (which are activated by visible light of long, medium and short wavelengths). Then, in the same scenario, these signals are immediately compared with signals from surrounding places. The comparison process continues as the signals move up the brain's hierarchy of processing centers, where they are compared to ever-larger portions of the environment. Accordingly, color and brightness are always relative due to this \"opponent process.\" I must say that this illusion is very sensitive to the brightness values of the image you will use. And you should use an image that you can center exactly. example: You probably have seen this lady's left eye as blue, but it's exactly the same color as the right eye. Use images that have a similar face structure and brightness values (luminance). In next version, I will add a parameter to adjust the luminance of the image. 6- dakinPexc sorceress.dakinPex(outputname=\"myoutput\",dimension=800) If you see the different tones of gray this illusion is successful. If you perceive all same, try with the big dimensions. I've written this illusion after the read a paper from (Dakin and Bex, 2003). The existence of spatial frequency channels in the visual system is implicated in lightness perception. And I also should note that It has long been known that the brightness of a region of visual space is not related only to that region\u2019s luminance, but depends also upon the luminances of adjacent regions (Von Bekesy, 1968). 7- bruno bruno(outputname,circle=False,polycolor=(0, 255, 255), rectcolor=(255, 255, 0), circColor=(0, 0, 255)) sorceress.sorcerer.bruno(\"myimagee\",polycolor=(0,0,255),rectcolor=(34,34,128)) Well at first time it seems a little bit confusing but in their experiments, Bruno et al. (1997) have shown their participants first the shapes that you've seen on the left then the shapes on the right have shown. In this experiment, participants needed to decide quickly as much as possible whether is it the same or not with the previous shape that they had shown. Results have shown that participants were fast and found it easy to say that the two shapes were the same in the top situation. But they were very slow in the other scenario (It's still the same!). 8- dolboeuf dolboeuf(outputname,circleColor=(0,0,255),kill=False) sorceress.dolboeuf(\"doloeufout\",kill=False) Which red circle is bigger than the other? Probably you know what I'm talking about, two of them in the same radius. This illusion was first created by Belgian psychologist Joseph Remi Leopold Delb\u0153uf in 1865. It's all about the perception of size. Of course, it's not the \"all\" about the story, the size differences of the inner and outer circles also play their roles in this illusion... Well, I didn't create a parameter for customizing those circles' (inner and outer) radius but I believe you get the point. If you select the kill=True , the illusion will be destroyed by the two horizontal lines. 9- kanizsa kanizsa(outputname,dims,circleColor=(0,0,255)) sorceress.kanizsa(\"12outkaniza\",400,circleColor=(34,34,178)) The Kanizsa illusion is probably one of the most known it was created by an Italian psychologist Gaetano Kanizsa (1913\u20131993). We can see surfaces, in this example squares (even though there are different kinds of Kanizas), with contours that are not present in the image. It is called illusory contours you can call this illusion also the \"subjective contours\" (Kanizsa, 1976). The first time I heard the name \"Kanizsa\" I thought he is Japanese for a long time. Then I learned that Kaniza was actually an Italian! It's because his name is used in many psychology textbooks to describe the Kanizsa triangle and most of those books don't give the full name of Kanizsa. 10- ponzol ponzol(outputname,kill=False,line1=(255,0,0),line2=(255,0,0),rectangle1=(0,0,255),rectangle2=(0,0,255)) sorceress.ponzol(\"test\",kill=False,line1=(0,0,139),line2=(0,0,139),rectangle1=(0,69,255),rectangle2=(0,80,255)) The Ponzo illusion is old (Ponzo, 1912). But Ponzo actually published his illusion with a scientific paper. Actually, any image with a strong sense of perspective has this. You could see various methods if you search a little bit (especially in railways). 11- tAki2001 sorceress.tAki2001(outputname, dimension=700, circlecolour=(0, 255, 255), circleradius=15, bglinecolor=(255, 128, 128),bgcolor=(255, 255, 255)) #example usage: sorceress.tAki2001(\"YelowRay\",dimension=1200) \u201cColoured ray illusion \u201d by Akiyoshi Kitaoka (Kitaoka, 2001). There were similar kinds of illusions that have been described by other scientists like Prandtl,(1927). Illusory yellow circles appear to run obliquely over the homogeneously white background. I added to function to change the background in the BGR array. Try it with other background colors with bgcolor parameter. 12-cafewall sorceress.cafeWall(outputname, dimension=1200, resize=False, brickcolor=(255, 255, 255), bgcolor=(0, 0, 0)) #example: sorceress.cafeWall(\"myimage\",1200,resize=True,brickcolor=(0,0,128),bgcolor=(114,128,254)) This is maybe one of the most strong optical illusions that have ever been created. Bricks create a pattern in which the mortar lines between them do not look parallel. Why do we call it a \"cafe wall\"? well, a student of Richard Gregory from the University of Bristol has noticed this from a caf\u00e9 (on St Michael\u2019s Hill). The illusion is strongest when the mortar has a brightness that is in between that of the two tiles. So illusion will be work as long as colors have different brightness. Why we are seeing this? Well, the only scientific explanation that I've known is from Gregory and Heard (1979). The role of orientation-sensitive simple cells in V1 and reactions to luminance borders are mainly involved in this illusion as they've mentioned. Gregory and Heard (1979) proposed that regions of varying luminances be retained in the spatial register by locking their borders. This border-locking technique causes inadvertent contour alterations between sections separated by small gaps. They've also shown that illusion disappears if the luminance of the middle line is noticeably lower or higher than the luminance of the two types of squares. 13-ccob #usage sorceress.ccob(\"aki.jpg\",rms=0.5,amplitudespectrum=300,plttitle=\"myoutput\") The signs with the letters R inside are the same color! This one is probably the most math-required optical illusion in this package. \ud83d\ude04 First why do I call it \"ccob\" it stands for \"Craik\u2013Cornsweet\u2013O'Brien\" and is commonly called as CCOB effect. The illusion is the same sorceress.sorcerer.dakinPexc() . This illusion is taken as evidence for a low\u2013level \u2018filling\u2013in\u2019 mechanism subserving lightness perception. How do I create this illusion? Well, it's about the spatial frequency filtering with Fourier transform. And this illusion is mostly stimulus-oriented, so be sure your input image has some big luminance differences and does not have too much roughness. The function is converting your image to grayscale first then scaling to -1 +1. Then RMS which is the standard deviation of a measure of image contrast, also known as \u201croot means square\u201d, the contrast has been adjusting. The most important part is the amplitude spectrum. You can either apply a low or high pass filter it depends on your input image. Finally, to minimize coarse changes in luminance, the function applies a Laplacian-of-Gaussians (LoG) filter. If you look close enough to the edges of the domains you may see some \"ringing\". This is the result of the discrete Fourier transform. The image that've shown image has been taken from the A. Kitaoka's twitter account. Here, I would like to show another example with another input image: sorceress.ccob(\"kaniza.png\",rms=0.2,amplitudespectrum=300,plttitle=\"myoutput2\") Above the color of the circles and the surface is the same. Try yourself with different amplitude spectrum and RMS values. 14-ebbinghaus sorceress.ebbinghaus(\"output\",bgcolor=(0,255,255),lcradius=22,rcradius=22) It looks simple, but the creating process of this illusion is about trigonometry \ud83d\ude04. The illusion called Ebbinghaus Illusion is similar to the Delb\u0153uf illusion. In both illusions, the size of an object is affected by the surrounding context. As you can see at the above bot circles has 22 radius. You also can change the outer circles' radius. If you have psychology major like me you probably heard a lot the German psychologist Hermann Ebbinghaus, especially in the introduction courses. We know his popular work about the memory. The illusion is widely replicated in psychology literature with different contexts (Aglioti et al, 1995; Lee and van Donkelaar, 2002; Culham et al, 2003). For example, In Aglioti's study, the direct comparison led to an approximately 50% increase of the illusion, which corresponds well to the difference found between perception and grasping. These researchers replaced the inner circular image with a tiny poker-chip-like token in their research. When asked to estimate the size of the target tokens, the subjects displayed the illusion throughout the trial, but when asked to manually pick up the central target token, the illusion had a considerably less impact on manual grip size during the grasping process. This was seen to indicate that the ventral system is influenced by the illusion and the dorsal system is not. The findings have been replicated by Haffenden and Goodale (1998). 15-whiteill sorceress.whiteill(dimension=300,version2=False,rect1=(92,92,255),rect2=(47,255,173),outputname=\"whiteillout\") This is another strong illusion that has been described by White (1979). As you can see above, although the inner rectangles have in same gray ((128,128,128)) scale we perceive it in different contrast. It is hard to believe that two grey patches are the same when they look so different. You may also perceive the \"lighter one\" as larger but it's another part of the illusion which was described first by Galileo Galilei (1632) as the \"irradiation effect\". This function has also different various of this illusion you may call with the version2=True that shown like the bellow: sorceress.whiteill(version2=True,outputname=\"whiteillout\") Do I need to say grays are the same? \ud83d\ude04. The scientific explanations are still debated in the literature at first look. A recent study about White's study (Betz et al., 2015) found that the illusion was marginally enhanced by contour adaptation at the test patch edges parallel to the grating. The contrasting behavior seen in the current investigation in response to independent manipulations of collinear or flanking bar luminance is consistent with these findings. Before White identified this phenomenon, it was believed that all brightness illusions were the consequence of rival processes, meaning that a gray item should appear dark when surrounded by light and light when surrounded by darkness. However, in this deception, the darker-appearing gray bars are surrounded by black stimuli whereas the lighter-appearing gray bars are surrounded by white stimuli. As I said before, White's effect's underlying neural mechanisms are still a mystery. 16-footsteps Ok since this is not part of our python package I have not listed it as a function. You can access this illusion from here sorceress/footsteps: . I also added source codes of the js, you can find it under the \"javascripts\" folder. The footsteps illusion is a motion illusion in which objects appear to move fast or slow even when they move at the same speed. With the link that I share with you above you can the speed and the adjusted colors in the same. In this version, I've added a small red rectangle in the middle. After you adjust colors in the same range (choose colors that have high contrast!) and slow down the animation speed focus to the middle rectangle now it looks like moving back and forth. The key point of explanation of this illusion is the brightness differences. Between the moving objects and the background is important for the explanation of this illusion (Anstis, 2003). 17-thelilac The Lilac chaser illusion is a visual illusion described by Jeremy L. Hinton in 2005 and was shown by Michael Bach on his website of the same year. For the best results, using a pinkish-violet color is a good choice, but other colors can also be used; in our animation, we'll use two different colors in two concentric rings. I also added a blur section which makes the stronger effect. You can access this illusion from here sorceress/thelilac: . I added various methods so you can use different combinations. 18-EyeMovements sorceress/EyeMovements: This illusion is quite interesting actually, when I first saw this illusion I immediately thought of the footstep illusion. It works in very similar. You can read the whole Twitter thread for the comments of its original creators. twitter/Ben Balas: I've customized this illusion with different conditions but I highly recommend the blur section. If you increase the blur of the screen the illusion is much stronger than you've realized. 20-Enigma enigma(linecolors=(255,255,255), bgcolor=(1, 1, 1),circle1=(76, 0, 153),circle2=(102, 0, 204),centercircle=(0,255,255), outputname=\"enigma\"): ` Fixation of the centre will result in the perception of rotatory motion in the circles. This illusion based on the a paper from the Zeki et al (1993). In their paper, they have shown that human V5 which basically responsible for the perception of motion, even there is no real motion, can be active with such illusions. So they concluded that activity in a visual area devoted to visual motion might be expected to correlate with the perception of motion, even if there is no real motion. When the two colors of circles are equiluminant and the only clues to the existence of moving stripes are color differences, the perception of motion is greatly diminished. These alterations are linked to V5 activity. And I also would like to remind you that the illusion may not work for everyone, there are individual differences. 21-blackhole sorceress.blackhole(outputname=\"blackhole\",height=800, width=800, circle_size=10, circle_color=(0, 0, 0),kill=False) This is a recent optical illusion that was described by Laeng et al (2022). According to the paper, the change rates of pupil diameters were significantly related to the illusory motion phenomenology only with the black holes. You can try it with the other colors though. \"The findings demonstrate that the reflex to dilate or contract the pupils is not a closed-loop system, like a photocell opening a door, that is only sensitive to the amount of light stimulating the photoreceptor. Instead of just adjusting to real energy, the eye may also respond to perceived and even imagined light.\" The illusion appeared most effective when the hole was black. However, I added many parameters so you can try different colors. 22-colorgrids If you look closely enough you will see the original image is black and white. However, via colorful stripes your brain into seeing a color image. Basically, our brain is trying to fill the gaps between the stripes and it gives us an overall impression of what's there. You can call the function like this: sorceress.colorgrids(\"inputfolder/test.jpg\",\"grids\",frequency=24) Inspiration, \u00d8yvind Kol\u00e5s : 23-Motion It's a very interesting illusion. I've seen it in a paper that was recently published (Brenner & Smeets, 2022) According to this paper when two dots move clockwise or counterclockwise along the circular path, the one dots clearly moves faster than the other one. However, they are at the same speed. I added different conditions to reproduce this illusion in different ways. You can access this illusion from here sorceress/Motion: 24-blindness Motion Induced Blindness (MIB) is a phenomenon of visual disappearance or perceptual illusions observed in the lab, in which stationary visual stimuli disappear as if erased in front of an observer's eyes when masked with a moving background. With this illusion, you can see the disappearance of the objects in front of your eyes. You can access this illusion from here sorceress/blindness: I added different conditions, \"add circle\" button adds circles to the screen and you can adjust their positions with your mouse interactively. You can also change the fixation cross with your mouse, + and - buttons change the speed of the moving background. In addition, I programmed the another version of this illusion it works with same principles but it's a bit different. You can access this illusion from here sorceress/blindness2: Use \"add circle\" button to add circles to the screen and you can adjust their positions with your mouse interactively. In this demonstration the observer focuses at the flickering green dot in the middle. After about 10 seconds, the observer sees one, two or all three of the static yellow dots arranged at the corners of an imaginary equilateral triangle disappear and then reappear. 25-Depth Our visual system is very good at estimating the depth of objects in the world. However, it's not perfect. Being able to view the world in three dimensions is known as depth perception. In order to perceive depth, we must also be able to determine how far away an item is from us. Our perception of an object's size and distance depends on the size and proximity of other items. For me, there is an incredibly strong depth illusion. Even though in 2D the squares are the same size, same color, and same distance but our brain creates a perception of depth. It's because of the borders of the squares, moreover if you animate you may also see a motion illusion. You can access this illusion from here, play with the parameters and see what happens Web demo REFERENCES Aglioti S, DeSouza JFX, Goodale MA (1995) Size-contrast illusions deceive the eye but not the hand. Curr Biol 5:679\u2013685 Anstis S. Moving objects appear to slow down at low contrasts. Neural Netw. 2003 Jun-Jul;16(5-6):933-8. doi: 10.1016/S0893-6080(03)00111-4. PMID: 12850053. Bakshi, A., & Ghosh, K. (2017). A Neural Model of Attention and Feedback for Computing Perceived Brightness in Vision. Handbook of Neural Computation, 487\u2013513. doi:10.1016/b978-0-12-811318-9.00026-0 Brenner, E., & Smeets, J. Spatial Vision for Action. Oxford Research Encyclopedia of Psychology. Retrieved 18 Oct. 2022, from https://oxfordre.com/psychology/view/10.1093/acrefore/9780190236557.001.0001/acrefore-9780190236557-e-842. Bruno N, Bertamini M, Domini F (1997) Amodal completion of partly occluded surfaces: Is there a mosaic stage. J Exp Psychol Hum Percept Perform 23:1412\u20131426 Cohen R.A. (2011) Lateral Inhibition. In: Kreutzer J.S., DeLuca J., Caplan B. (eds) Encyclopedia of Clinical Neuropsychology. Springer, New York, NY. https://doi.org/10.1007/978-0-387-79948-3_1379 Culham, J.C., Danckert, S.L., Souza, J.F.X.D. et al. Visually guided grasping produces fMRI activation in dorsal but not ventral stream brain areas. Exp Brain Res 153, 180\u2013189 (2003). https://doi.org/10.1007/s00221-003-1591-5 Dakin S. C. and Bex P. J. 2003 Natural image statistics mediate brightness \u2018filling in\u2019 Proc. R. Soc. Lond. B. 270**2341\u20132348 http://doi.org/10.1098/rspb.2003.2528 Gregory RL, Heard P (1979) Border locking and the caf\u00e9 wall illusion. Perception 8(4):365\u2013380 Haffenden, A. M. & Goodale, M. A. (1998) The effect of pictorial illusion on prehension and perception. Journal of Cognitive Neuroscience 10(1):122\u201336 Karl R. Gegenfurtner, L. T. Sharpe (1999). Color Vision: From Genes to Perception, Cambridge University Press. Kanizsa G (1976) Subjective contours. Sci Am 234:48\u201352 Kitaoka, A. (2001).\u3000Illusion designology (7): Illusory light perception that cannot be explained by the Fourier analysis. Nikkei Science, 31 (8), 66-68 (in Japanese). Laeng B, Nabil S and Kitaoka A (2022) The Eye Pupil Adjusts to Illusorily Expanding Holes. Front. Hum. Neurosci. 16:877249. doi: 10.3389/fnhum.2022.877249 Lee, JH., van Donkelaar, P. Dorsal and ventral visual stream contributions to perception-action interactions during pointing. Exp Brain Res 143, 440\u2013446 (2002). https://doi.org/10.1007/s00221-002-1011-2 Ponzo, M. (1911). \"Intorno ad alcune illusioni nel campo delle sensazioni tattili sull'illusione di Aristotele e fenomeni analoghi\". Prandtl A (1927) \u00dcber gleichsinnige Induktion und die Lichtverteilung in gitterartigen Mustern [Onuniform induction and light distribution in lattice patterns]. Zeitschrift f\u00fcr Sinnesphysiologie58:263\u2013307 Torsten Betz, Robert Shapley, Felix A. Wichmann, Marianne Maertens; Testing the role of luminance edges in White's illusion with contour adaptation. Journal of Vision 2015;15(11):14. doi:10.1167/15.11.14. White M (1979) A new effect of pattern on perceived lightness. Perception 8:413\u2013416 Von Bekesy G. (1968) Mach- and Hering-type inhibition invision. Vision Res. 8, 1483-1499. Zeki S, Watson JD, Frackowiak RS. Going beyond the information given: the relation of illusory visual motion to brain activity. Proc Biol Sci. 1993 Jun 22;252(1335):215-22. doi: 10.1098/rspb.1993.0068. PMID: 8394582.","title":"explanations"},{"location":"explanations%20of%20illusions/#this-page-is-trying-to-explain-all-optical-illusions","text":"First, let's import the package. I usually import the package like this: from sorceress import sorceress Remember you need to also install other packages, otherwise you will get an error. One of the packages is numpy , which is used to create arrays. You can install it by typing pip install numpy in your terminal. Another package is matplotlib , which is used to plot the images. You can install it by typing pip install matplotlib in your terminal. If you are using conda , you can install them by typing conda install numpy and conda install matplotlib in your terminal. If you are using pipenv , you can install them by typing pipenv install numpy and pipenv install matplotlib in your terminal. Another package is cv2, which is used to read images and image processing. You can install it by typing pip install opencv-python in your terminal. I also use imageio and PIL packages for more basic image processing. You can install them by typing pip install imageio and pip install pillow in your terminal. Last one is the color-science package, which is used to convert colors. You can install it by typing pip install color-science in your terminal. You don't need to import the other packages, because they are imported in the sorceress package.","title":"This page is trying to explain all optical illusions"},{"location":"explanations%20of%20illusions/#1-chromatic","text":"Chromatic adaptation is probably one of the central concepts in color vision. Chromatic adaptation is decreased sensitivity to a particular color as a result of prolonged exposure to a colored stimulus. The chromatic adaptation transforms were mainly studied with von Kries, Bradford, Sharp, and CMCCAT2000. However, CMCCAT2000 performed best. You can apply this function to any image and function automatically processes the image and returns a gif file. The gif file shows the transformation of the image from the original to the adapted image. The von Kries chromatic adaptation method is a technique that is sometimes used in camera image processing. The method is to apply a gain to each of the human cone cell spectral sensitivity responses so as to keep the adapted appearance of the reference white constant. Herbert E. Ives was the first to clearly apply Johannes von Kries' theory of adaptive gains on the three cone cell types to the issue of color constancy; as a result, the technique is sometimes known as the Ives transform or the von Kries-Ives adaptation (Gegenfurtner, 1999). sorceress.chromatic(\"inputfolder/tree.jpg\",Gifduration=10) simple example via a gif: focus on the red dot (10 second) image source","title":"1- chromatic"},{"location":"explanations%20of%20illusions/#2-dotill","text":"Lateral inhibition is the phenomenon in which a neuron's response to a stimulus is inhibited by the excitation of a neighboring neuron (Bakshi and Ghosh, 2017).Neurons that are firing inhibit the stimulation of surrounding. Accordingly, only the neurons that are most stimulated and least inhibited respond (Cohen, 2011). Some neurons are activated more than others during lateral inhibition. Excitatory neurotransmitters are released to neurons along a specific path by a highly activated cell. In addition, the highly activated primary neuron in the brain activates interneurons that prevent the stimulation of cells that are located laterally. Interneurons are nerve cells that help the central nervous system and motor or sensory neurons communicate with one another. This action increases the contrast between different stimuli and sharpens the focus on a particular stimulus. Body sensory systems like the olfactory, visual, tactile, and auditory systems all experience lateral inhibition. Mach bands, the perception of light and dark lines next to abrupt brightness changes, and the gray dots that appear between junctions in the Hermann grid illusion can all be explained by lateral inhibition. It's an old-fashioned illusion that is probably known the most. I've added many parameters to this function to reproduce in distinctive ways. example usage: sorceress.dotill((500,500),hlinefreq=12,wlinefreq=12,dotcolor=(0,255,0),dotradius=5,horizontalcolor=(14, 75, 3),verticalcolor=(14, 75, 3),horizontalthickness=4,verticalthickness=4,verticallines=True,horizontallines=True): 3- sorceress.realtimegrid() sorceress.realtimegrid(realcolours=True) perceive black and white real time (with webcam) frames as colorful. It's a real time version of sorceress.colorgrids() function. with realcolours=False code will not calculate the real colors of your frame. I recommend you to use this function with real colors. Illusion is getting powerful if colors of lines separate each other, however, with realcolours=False means a lot of options are needed in the slide bar and it's not a pleasant view. It is an indicator of how flexible the color perception in the human visual system is. Inspiration :","title":"2- dotill"},{"location":"explanations%20of%20illusions/#4-addlines","text":"inspired from prof Akiyoshi Kitaoka. Have you seen this illusion before? In the below, someone is hiding after those grids. Beneath these grids there is more than Grids. Beneath these grids there is an idea. And ideas are bulletproof... What you see is results of vast amounts of neural computation, mixed with a bit of guesswork. If you look closely you use lower spatial frequencies and if you look at a further distance you will see the high spatial frequencies. In short, there are more grids that fall on the light-sensitive portion of the back of your eye the further the image is away from you.Low-contrast object perception is impaired by high spatial-frequency components. You can see the Vendetta guy if you scroll down and up the page or zoom out the whole image. Or more accurately, apply a Gaussian. sorceress.addlines(img,linecolour1=(0,255,0),linecolour2=(0,255,255),linecolour3=(255,0,0)) This function basically adds vertical lines to an image, but it's blending not overlaying! img your input image like \"morgo.jpg\" linecolour1 linecolour2 and linecolour3 are point the colors of lines. example usage: sorceress.addlines(\"vfor.jpg\",linecolour1=(150,5,5),linecolour2=(10,155,20),linecolour3=(0,15,15),alphablending==False) If you select alphablending==True line colors are much more stable against the luminance change in the background image. It's because in OpenCV when you overlay two images or colors the function called addWeighted mixes the colors in very \"small tones\" but you probably do not even notice. Still, this function which I called alpha blending, is much more stable to luminance change. Use both, in the same way, and see what differs.","title":"4- addlines"},{"location":"explanations%20of%20illusions/#5-eyecolour","text":"inspried from: sorceress.eyecolour(\"yourimage.jpg\") With this illusion, you perceive the black-and-white NumPy array as colorful. After you run this code, you need to select the iris manually and then push the enter. I didn't want to use the iris detector since it slowed down the script. Just select smaller as much as possible. I've used seamlessClone function from OpenCV for getting much more realistic results. Your ROI (region of interest that you selected manually) will correspond to an eclipse' coordinates which I needed to detect the exact position of the iris. Red, green, and blue are three overlapping color families that three separate types of photoreceptors in the eye are tuned to, which contributes to the process of seeing color (which are activated by visible light of long, medium and short wavelengths). Then, in the same scenario, these signals are immediately compared with signals from surrounding places. The comparison process continues as the signals move up the brain's hierarchy of processing centers, where they are compared to ever-larger portions of the environment. Accordingly, color and brightness are always relative due to this \"opponent process.\" I must say that this illusion is very sensitive to the brightness values of the image you will use. And you should use an image that you can center exactly. example: You probably have seen this lady's left eye as blue, but it's exactly the same color as the right eye. Use images that have a similar face structure and brightness values (luminance). In next version, I will add a parameter to adjust the luminance of the image.","title":"5- eyecolour"},{"location":"explanations%20of%20illusions/#6-dakinpexc","text":"sorceress.dakinPex(outputname=\"myoutput\",dimension=800) If you see the different tones of gray this illusion is successful. If you perceive all same, try with the big dimensions. I've written this illusion after the read a paper from (Dakin and Bex, 2003). The existence of spatial frequency channels in the visual system is implicated in lightness perception. And I also should note that It has long been known that the brightness of a region of visual space is not related only to that region\u2019s luminance, but depends also upon the luminances of adjacent regions (Von Bekesy, 1968).","title":"6- dakinPexc"},{"location":"explanations%20of%20illusions/#7-bruno","text":"bruno(outputname,circle=False,polycolor=(0, 255, 255), rectcolor=(255, 255, 0), circColor=(0, 0, 255)) sorceress.sorcerer.bruno(\"myimagee\",polycolor=(0,0,255),rectcolor=(34,34,128)) Well at first time it seems a little bit confusing but in their experiments, Bruno et al. (1997) have shown their participants first the shapes that you've seen on the left then the shapes on the right have shown. In this experiment, participants needed to decide quickly as much as possible whether is it the same or not with the previous shape that they had shown. Results have shown that participants were fast and found it easy to say that the two shapes were the same in the top situation. But they were very slow in the other scenario (It's still the same!).","title":"7- bruno"},{"location":"explanations%20of%20illusions/#8-dolboeuf","text":"dolboeuf(outputname,circleColor=(0,0,255),kill=False) sorceress.dolboeuf(\"doloeufout\",kill=False) Which red circle is bigger than the other? Probably you know what I'm talking about, two of them in the same radius. This illusion was first created by Belgian psychologist Joseph Remi Leopold Delb\u0153uf in 1865. It's all about the perception of size. Of course, it's not the \"all\" about the story, the size differences of the inner and outer circles also play their roles in this illusion... Well, I didn't create a parameter for customizing those circles' (inner and outer) radius but I believe you get the point. If you select the kill=True , the illusion will be destroyed by the two horizontal lines.","title":"8- dolboeuf"},{"location":"explanations%20of%20illusions/#9-kanizsa","text":"kanizsa(outputname,dims,circleColor=(0,0,255)) sorceress.kanizsa(\"12outkaniza\",400,circleColor=(34,34,178)) The Kanizsa illusion is probably one of the most known it was created by an Italian psychologist Gaetano Kanizsa (1913\u20131993). We can see surfaces, in this example squares (even though there are different kinds of Kanizas), with contours that are not present in the image. It is called illusory contours you can call this illusion also the \"subjective contours\" (Kanizsa, 1976). The first time I heard the name \"Kanizsa\" I thought he is Japanese for a long time. Then I learned that Kaniza was actually an Italian! It's because his name is used in many psychology textbooks to describe the Kanizsa triangle and most of those books don't give the full name of Kanizsa.","title":"9- kanizsa"},{"location":"explanations%20of%20illusions/#10-ponzol","text":"ponzol(outputname,kill=False,line1=(255,0,0),line2=(255,0,0),rectangle1=(0,0,255),rectangle2=(0,0,255)) sorceress.ponzol(\"test\",kill=False,line1=(0,0,139),line2=(0,0,139),rectangle1=(0,69,255),rectangle2=(0,80,255)) The Ponzo illusion is old (Ponzo, 1912). But Ponzo actually published his illusion with a scientific paper. Actually, any image with a strong sense of perspective has this. You could see various methods if you search a little bit (especially in railways).","title":"10- ponzol"},{"location":"explanations%20of%20illusions/#11-taki2001","text":"sorceress.tAki2001(outputname, dimension=700, circlecolour=(0, 255, 255), circleradius=15, bglinecolor=(255, 128, 128),bgcolor=(255, 255, 255)) #example usage: sorceress.tAki2001(\"YelowRay\",dimension=1200) \u201cColoured ray illusion \u201d by Akiyoshi Kitaoka (Kitaoka, 2001). There were similar kinds of illusions that have been described by other scientists like Prandtl,(1927). Illusory yellow circles appear to run obliquely over the homogeneously white background. I added to function to change the background in the BGR array. Try it with other background colors with bgcolor parameter.","title":"11- tAki2001"},{"location":"explanations%20of%20illusions/#12-cafewall","text":"sorceress.cafeWall(outputname, dimension=1200, resize=False, brickcolor=(255, 255, 255), bgcolor=(0, 0, 0)) #example: sorceress.cafeWall(\"myimage\",1200,resize=True,brickcolor=(0,0,128),bgcolor=(114,128,254)) This is maybe one of the most strong optical illusions that have ever been created. Bricks create a pattern in which the mortar lines between them do not look parallel. Why do we call it a \"cafe wall\"? well, a student of Richard Gregory from the University of Bristol has noticed this from a caf\u00e9 (on St Michael\u2019s Hill). The illusion is strongest when the mortar has a brightness that is in between that of the two tiles. So illusion will be work as long as colors have different brightness. Why we are seeing this? Well, the only scientific explanation that I've known is from Gregory and Heard (1979). The role of orientation-sensitive simple cells in V1 and reactions to luminance borders are mainly involved in this illusion as they've mentioned. Gregory and Heard (1979) proposed that regions of varying luminances be retained in the spatial register by locking their borders. This border-locking technique causes inadvertent contour alterations between sections separated by small gaps. They've also shown that illusion disappears if the luminance of the middle line is noticeably lower or higher than the luminance of the two types of squares.","title":"12-cafewall"},{"location":"explanations%20of%20illusions/#13-ccob","text":"#usage sorceress.ccob(\"aki.jpg\",rms=0.5,amplitudespectrum=300,plttitle=\"myoutput\") The signs with the letters R inside are the same color! This one is probably the most math-required optical illusion in this package. \ud83d\ude04 First why do I call it \"ccob\" it stands for \"Craik\u2013Cornsweet\u2013O'Brien\" and is commonly called as CCOB effect. The illusion is the same sorceress.sorcerer.dakinPexc() . This illusion is taken as evidence for a low\u2013level \u2018filling\u2013in\u2019 mechanism subserving lightness perception. How do I create this illusion? Well, it's about the spatial frequency filtering with Fourier transform. And this illusion is mostly stimulus-oriented, so be sure your input image has some big luminance differences and does not have too much roughness. The function is converting your image to grayscale first then scaling to -1 +1. Then RMS which is the standard deviation of a measure of image contrast, also known as \u201croot means square\u201d, the contrast has been adjusting. The most important part is the amplitude spectrum. You can either apply a low or high pass filter it depends on your input image. Finally, to minimize coarse changes in luminance, the function applies a Laplacian-of-Gaussians (LoG) filter. If you look close enough to the edges of the domains you may see some \"ringing\". This is the result of the discrete Fourier transform. The image that've shown image has been taken from the A. Kitaoka's twitter account. Here, I would like to show another example with another input image: sorceress.ccob(\"kaniza.png\",rms=0.2,amplitudespectrum=300,plttitle=\"myoutput2\") Above the color of the circles and the surface is the same. Try yourself with different amplitude spectrum and RMS values.","title":"13-ccob"},{"location":"explanations%20of%20illusions/#14-ebbinghaus","text":"sorceress.ebbinghaus(\"output\",bgcolor=(0,255,255),lcradius=22,rcradius=22) It looks simple, but the creating process of this illusion is about trigonometry \ud83d\ude04. The illusion called Ebbinghaus Illusion is similar to the Delb\u0153uf illusion. In both illusions, the size of an object is affected by the surrounding context. As you can see at the above bot circles has 22 radius. You also can change the outer circles' radius. If you have psychology major like me you probably heard a lot the German psychologist Hermann Ebbinghaus, especially in the introduction courses. We know his popular work about the memory. The illusion is widely replicated in psychology literature with different contexts (Aglioti et al, 1995; Lee and van Donkelaar, 2002; Culham et al, 2003). For example, In Aglioti's study, the direct comparison led to an approximately 50% increase of the illusion, which corresponds well to the difference found between perception and grasping. These researchers replaced the inner circular image with a tiny poker-chip-like token in their research. When asked to estimate the size of the target tokens, the subjects displayed the illusion throughout the trial, but when asked to manually pick up the central target token, the illusion had a considerably less impact on manual grip size during the grasping process. This was seen to indicate that the ventral system is influenced by the illusion and the dorsal system is not. The findings have been replicated by Haffenden and Goodale (1998).","title":"14-ebbinghaus"},{"location":"explanations%20of%20illusions/#15-whiteill","text":"sorceress.whiteill(dimension=300,version2=False,rect1=(92,92,255),rect2=(47,255,173),outputname=\"whiteillout\") This is another strong illusion that has been described by White (1979). As you can see above, although the inner rectangles have in same gray ((128,128,128)) scale we perceive it in different contrast. It is hard to believe that two grey patches are the same when they look so different. You may also perceive the \"lighter one\" as larger but it's another part of the illusion which was described first by Galileo Galilei (1632) as the \"irradiation effect\". This function has also different various of this illusion you may call with the version2=True that shown like the bellow: sorceress.whiteill(version2=True,outputname=\"whiteillout\") Do I need to say grays are the same? \ud83d\ude04. The scientific explanations are still debated in the literature at first look. A recent study about White's study (Betz et al., 2015) found that the illusion was marginally enhanced by contour adaptation at the test patch edges parallel to the grating. The contrasting behavior seen in the current investigation in response to independent manipulations of collinear or flanking bar luminance is consistent with these findings. Before White identified this phenomenon, it was believed that all brightness illusions were the consequence of rival processes, meaning that a gray item should appear dark when surrounded by light and light when surrounded by darkness. However, in this deception, the darker-appearing gray bars are surrounded by black stimuli whereas the lighter-appearing gray bars are surrounded by white stimuli. As I said before, White's effect's underlying neural mechanisms are still a mystery.","title":"15-whiteill"},{"location":"explanations%20of%20illusions/#16-footsteps","text":"Ok since this is not part of our python package I have not listed it as a function. You can access this illusion from here sorceress/footsteps: . I also added source codes of the js, you can find it under the \"javascripts\" folder. The footsteps illusion is a motion illusion in which objects appear to move fast or slow even when they move at the same speed. With the link that I share with you above you can the speed and the adjusted colors in the same. In this version, I've added a small red rectangle in the middle. After you adjust colors in the same range (choose colors that have high contrast!) and slow down the animation speed focus to the middle rectangle now it looks like moving back and forth. The key point of explanation of this illusion is the brightness differences. Between the moving objects and the background is important for the explanation of this illusion (Anstis, 2003).","title":"16-footsteps"},{"location":"explanations%20of%20illusions/#17-thelilac","text":"The Lilac chaser illusion is a visual illusion described by Jeremy L. Hinton in 2005 and was shown by Michael Bach on his website of the same year. For the best results, using a pinkish-violet color is a good choice, but other colors can also be used; in our animation, we'll use two different colors in two concentric rings. I also added a blur section which makes the stronger effect. You can access this illusion from here sorceress/thelilac: . I added various methods so you can use different combinations.","title":"17-thelilac"},{"location":"explanations%20of%20illusions/#18-eyemovements","text":"sorceress/EyeMovements: This illusion is quite interesting actually, when I first saw this illusion I immediately thought of the footstep illusion. It works in very similar. You can read the whole Twitter thread for the comments of its original creators. twitter/Ben Balas: I've customized this illusion with different conditions but I highly recommend the blur section. If you increase the blur of the screen the illusion is much stronger than you've realized.","title":"18-EyeMovements"},{"location":"explanations%20of%20illusions/#20-enigma","text":"enigma(linecolors=(255,255,255), bgcolor=(1, 1, 1),circle1=(76, 0, 153),circle2=(102, 0, 204),centercircle=(0,255,255), outputname=\"enigma\"): ` Fixation of the centre will result in the perception of rotatory motion in the circles. This illusion based on the a paper from the Zeki et al (1993). In their paper, they have shown that human V5 which basically responsible for the perception of motion, even there is no real motion, can be active with such illusions. So they concluded that activity in a visual area devoted to visual motion might be expected to correlate with the perception of motion, even if there is no real motion. When the two colors of circles are equiluminant and the only clues to the existence of moving stripes are color differences, the perception of motion is greatly diminished. These alterations are linked to V5 activity. And I also would like to remind you that the illusion may not work for everyone, there are individual differences.","title":"20-Enigma"},{"location":"explanations%20of%20illusions/#21-blackhole","text":"sorceress.blackhole(outputname=\"blackhole\",height=800, width=800, circle_size=10, circle_color=(0, 0, 0),kill=False) This is a recent optical illusion that was described by Laeng et al (2022). According to the paper, the change rates of pupil diameters were significantly related to the illusory motion phenomenology only with the black holes. You can try it with the other colors though. \"The findings demonstrate that the reflex to dilate or contract the pupils is not a closed-loop system, like a photocell opening a door, that is only sensitive to the amount of light stimulating the photoreceptor. Instead of just adjusting to real energy, the eye may also respond to perceived and even imagined light.\" The illusion appeared most effective when the hole was black. However, I added many parameters so you can try different colors.","title":"21-blackhole"},{"location":"explanations%20of%20illusions/#22-colorgrids","text":"If you look closely enough you will see the original image is black and white. However, via colorful stripes your brain into seeing a color image. Basically, our brain is trying to fill the gaps between the stripes and it gives us an overall impression of what's there. You can call the function like this: sorceress.colorgrids(\"inputfolder/test.jpg\",\"grids\",frequency=24) Inspiration, \u00d8yvind Kol\u00e5s :","title":"22-colorgrids"},{"location":"explanations%20of%20illusions/#23-motion","text":"It's a very interesting illusion. I've seen it in a paper that was recently published (Brenner & Smeets, 2022) According to this paper when two dots move clockwise or counterclockwise along the circular path, the one dots clearly moves faster than the other one. However, they are at the same speed. I added different conditions to reproduce this illusion in different ways. You can access this illusion from here sorceress/Motion:","title":"23-Motion"},{"location":"explanations%20of%20illusions/#24-blindness","text":"Motion Induced Blindness (MIB) is a phenomenon of visual disappearance or perceptual illusions observed in the lab, in which stationary visual stimuli disappear as if erased in front of an observer's eyes when masked with a moving background. With this illusion, you can see the disappearance of the objects in front of your eyes. You can access this illusion from here sorceress/blindness: I added different conditions, \"add circle\" button adds circles to the screen and you can adjust their positions with your mouse interactively. You can also change the fixation cross with your mouse, + and - buttons change the speed of the moving background. In addition, I programmed the another version of this illusion it works with same principles but it's a bit different. You can access this illusion from here sorceress/blindness2: Use \"add circle\" button to add circles to the screen and you can adjust their positions with your mouse interactively. In this demonstration the observer focuses at the flickering green dot in the middle. After about 10 seconds, the observer sees one, two or all three of the static yellow dots arranged at the corners of an imaginary equilateral triangle disappear and then reappear.","title":"24-blindness"},{"location":"explanations%20of%20illusions/#25-depth","text":"Our visual system is very good at estimating the depth of objects in the world. However, it's not perfect. Being able to view the world in three dimensions is known as depth perception. In order to perceive depth, we must also be able to determine how far away an item is from us. Our perception of an object's size and distance depends on the size and proximity of other items. For me, there is an incredibly strong depth illusion. Even though in 2D the squares are the same size, same color, and same distance but our brain creates a perception of depth. It's because of the borders of the squares, moreover if you animate you may also see a motion illusion. You can access this illusion from here, play with the parameters and see what happens Web demo","title":"25-Depth"},{"location":"explanations%20of%20illusions/#references","text":"Aglioti S, DeSouza JFX, Goodale MA (1995) Size-contrast illusions deceive the eye but not the hand. Curr Biol 5:679\u2013685 Anstis S. Moving objects appear to slow down at low contrasts. Neural Netw. 2003 Jun-Jul;16(5-6):933-8. doi: 10.1016/S0893-6080(03)00111-4. PMID: 12850053. Bakshi, A., & Ghosh, K. (2017). A Neural Model of Attention and Feedback for Computing Perceived Brightness in Vision. Handbook of Neural Computation, 487\u2013513. doi:10.1016/b978-0-12-811318-9.00026-0 Brenner, E., & Smeets, J. Spatial Vision for Action. Oxford Research Encyclopedia of Psychology. Retrieved 18 Oct. 2022, from https://oxfordre.com/psychology/view/10.1093/acrefore/9780190236557.001.0001/acrefore-9780190236557-e-842. Bruno N, Bertamini M, Domini F (1997) Amodal completion of partly occluded surfaces: Is there a mosaic stage. J Exp Psychol Hum Percept Perform 23:1412\u20131426 Cohen R.A. (2011) Lateral Inhibition. In: Kreutzer J.S., DeLuca J., Caplan B. (eds) Encyclopedia of Clinical Neuropsychology. Springer, New York, NY. https://doi.org/10.1007/978-0-387-79948-3_1379 Culham, J.C., Danckert, S.L., Souza, J.F.X.D. et al. Visually guided grasping produces fMRI activation in dorsal but not ventral stream brain areas. Exp Brain Res 153, 180\u2013189 (2003). https://doi.org/10.1007/s00221-003-1591-5 Dakin S. C. and Bex P. J. 2003 Natural image statistics mediate brightness \u2018filling in\u2019 Proc. R. Soc. Lond. B. 270**2341\u20132348 http://doi.org/10.1098/rspb.2003.2528 Gregory RL, Heard P (1979) Border locking and the caf\u00e9 wall illusion. Perception 8(4):365\u2013380 Haffenden, A. M. & Goodale, M. A. (1998) The effect of pictorial illusion on prehension and perception. Journal of Cognitive Neuroscience 10(1):122\u201336 Karl R. Gegenfurtner, L. T. Sharpe (1999). Color Vision: From Genes to Perception, Cambridge University Press. Kanizsa G (1976) Subjective contours. Sci Am 234:48\u201352 Kitaoka, A. (2001).\u3000Illusion designology (7): Illusory light perception that cannot be explained by the Fourier analysis. Nikkei Science, 31 (8), 66-68 (in Japanese). Laeng B, Nabil S and Kitaoka A (2022) The Eye Pupil Adjusts to Illusorily Expanding Holes. Front. Hum. Neurosci. 16:877249. doi: 10.3389/fnhum.2022.877249 Lee, JH., van Donkelaar, P. Dorsal and ventral visual stream contributions to perception-action interactions during pointing. Exp Brain Res 143, 440\u2013446 (2002). https://doi.org/10.1007/s00221-002-1011-2 Ponzo, M. (1911). \"Intorno ad alcune illusioni nel campo delle sensazioni tattili sull'illusione di Aristotele e fenomeni analoghi\". Prandtl A (1927) \u00dcber gleichsinnige Induktion und die Lichtverteilung in gitterartigen Mustern [Onuniform induction and light distribution in lattice patterns]. Zeitschrift f\u00fcr Sinnesphysiologie58:263\u2013307 Torsten Betz, Robert Shapley, Felix A. Wichmann, Marianne Maertens; Testing the role of luminance edges in White's illusion with contour adaptation. Journal of Vision 2015;15(11):14. doi:10.1167/15.11.14. White M (1979) A new effect of pattern on perceived lightness. Perception 8:413\u2013416 Von Bekesy G. (1968) Mach- and Hering-type inhibition invision. Vision Res. 8, 1483-1499. Zeki S, Watson JD, Frackowiak RS. Going beyond the information given: the relation of illusory visual motion to brain activity. Proc Biol Sci. 1993 Jun 22;252(1335):215-22. doi: 10.1098/rspb.1993.0068. PMID: 8394582.","title":"REFERENCES"},{"location":"jsanimations/","text":"Since I thought JavaScript is handier than python when it comes to animations and web deployment, I created animations in JavaScript. Currently, there are 7 illusions that can be seen on the page. But as you can notice, the repository has also some other js files. These are currently in the development stage. You can open them in the browser and see the code and feel free to contribute to finishing them. Note: The animations are not optimized for mobile devices. They are only optimized for desktops. Finished animations : foot steps illusion eyes movements The Lilac SAction blindness blindness2 depth","title":"about"}]}